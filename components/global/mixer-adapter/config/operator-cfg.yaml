# handler for adapter wso2spadapter
apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
  name: wso2spadapter-handler
  namespace: istio-system
spec:
  adapter: wso2spadapter
  connection:
    address: "wso2spadapterservice:38355"
  #    authentication:
  #      mutual:
  #        private_key: "/tmp/grpc-test-key-cert/mixer.key"
  #        client_certificate: "/tmp/grpc-test-key-cert/mixer.crt"
  #        ca_certificates: "/tmp/grpc-test-key-cert/ca.pem"
  params:
    file_path: "out.txt"
---

# instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: wso2spadapter-metric
  namespace: istio-system
spec:
  template: metric
  params:
    dimensions:
      sourceUID: source.uid | ""
      sourceLabelsApp: source.labels["app"] | ""
      sourceLabelsVersion: source.labels["version"] | ""
      sourceLabelsSvc: source.labels["svc"] | ""
      sourceLabelsCell: source.labels["mesh.cellery.io.cell"] | ""
      sourceLabelsCellSlash: source.labels["mesh.cellery.io/cell"] | ""
      sourceLabelsCellGateway: source.labels["mesh.cellery.io/gateway"] | ""
      sourceLabelsPodTemplateHash: source.labels["pod-template-hash"] | ""
      sourceName: source.name | ""
      sourceNamespace: source.namespace | ""
      sourcePrincipal: source.principal | ""
      sourceOwner: source.owner | ""
      sourceWorkloadUID: source.workload.uid | ""
      sourceWorkloadName: source.workload.name | ""
      sourceWorkloadNamespace: source.workload.namespace | ""
      destinationUID: destination.uid | ""
      destinationPort: destination.port | 0
      destinationName: destination.name | ""
      destinationNamespace: destination.namespace | ""
      destinationPrincipal: destination.principal | ""
      destinationOwner: destination.owner | ""
      destinationWorkloadUID: destination.workload.uid | ""
      destinationWorkload: destination.workload.name | ""
      destinationWorkloadNamespace: destination.workload.namespace | ""
      destinationContainerName: destination.container.name | ""
      destinationServiceHost: destination.service.host | ""
      destinationServiceUID: destination.service.uid | ""
      destinationServiceName: destination.service.name | ""
      destinationServiceNamespace: destination.service.namespace | ""
      requestID: request.id | ""
      requestPath: request.path | ""
      requestHost: request.host | ""
      requestMethod: request.method | ""
      requestReason: request.reason | ""
      requestReferer: request.referer | ""
      requestScheme: request.scheme | ""
      requestSize: request.size | 0
      requestTotalSize: request.total_size | 0
      requestUserAgent: request.useragent | ""
      responseSize: response.size | 0
      responseTotalSize: response.total_size | 0
      responseDurationNanoSec: response.duration
      responseCode: response.code | 0
      responseGrpcStatus: response.grpc_status | ""
      responseGrpcMessage: response.grpc_message | ""
      connectionID: connection.id | ""
      connectionEvent: connection.event | ""
      connectionReceivedBytes: connection.received.bytes | 0
      connectionReceivedBytesTotal: connection.received.bytes_total | 0
      connectionSentBytes: connection.sent.bytes | 0
      connectionSentBytesTotal: connection.sent.bytes_total | 0
      connectionMTLS: connection.mtls | false
      connectionRequestedServerName: connection.requested_server_name | ""
      contextProtocol: context.protocol | ""
      contextReporterKind: context.reporter.kind | ""
      contextReporterUID: context.reporter.uid | ""
      apiService: api.service | ""
      apiVersion: api.version | ""
      apiOperation: api.operation | ""
      apiProtocol: api.protocol | ""
      requestAuthPrincipal: request.auth.principal | ""
      requestAuthAudiences: request.auth.audiences | ""
      requestAuthPresenter: request.auth.presenter | ""
      requestApiKey: request.api_key | ""
      checkErrorCode: check.error_code | 0
      checkErrorMessage: check.error_message | ""
      checkCasheHit: check.cache_hit | false
      quotaCacheHit: quota.cache_hit | false
      contextReporterLocal: context.reporter.local | false
---

# rule to dispatch to handler wso2spadapter-handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: wso2spadapter-rule
  namespace: istio-system
spec:
  actions:
    - handler: wso2spadapter-handler.istio-system
      instances:
        - wso2spadapter-metric
---
